name: CI

on:
  push:
    branches: [ main, develop, feature/*, hotfix/*, bugfix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        dotnet-version: ['9.0.x']

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
    
    - name: Restore dependencies
      run: dotnet restore src/ai-cli.sln
    
    - name: Build
      run: dotnet build src/ai-cli.sln --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
    
    - name: Run tests
      run: dotnet test src/ai-cli.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        files: '**/coverage.cobertura.xml'
        fail_ci_if_error: false

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
    
    - name: Restore dependencies
      run: dotnet restore src/ai-cli.sln
    
    - name: Build and publish for multiple platforms
      run: |
        platforms=("win-x64" "linux-x64" "osx-x64")
        version="${{ steps.gitversion.outputs.semVer }}"
        
        for platform in "${platforms[@]}"; do
          echo "Building for $platform..."
          dotnet publish src/ai-cli/ai-cli.csproj \
            --configuration Release \
            --runtime $platform \
            --self-contained true \
            --output publish/$platform \
            /p:PublishSingleFile=true \
            /p:PublishTrimmed=true \
            /p:TrimmerDefaultAction=link \
            /p:Version=${{ steps.gitversion.outputs.assemblySemFileVer }} \
            /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
            /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
            /p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}
          
          # Create zip files for each platform
          cd publish/$platform
          if [[ "$platform" == "win-x64" ]]; then
            zip -r ../ai-cli-$version-$platform.zip ai-cli.exe
          else
            zip -r ../ai-cli-$version-$platform.zip ai-cli
          fi
          cd ../..
        done
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ai-cli-binaries
        path: publish/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
    
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
        configFilePath: GitVersion.yml
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ai-cli-binaries
        path: publish/
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.gitversion.outputs.semVer }}
        name: Release v${{ steps.gitversion.outputs.semVer }}
        body: |
          ## Changes
          
          This release was automatically generated from the latest changes in the master branch.
          
          ## Download
          
          Choose the appropriate binary for your platform:
          - **Windows**: ai-cli-${{ steps.gitversion.outputs.semVer }}-win-x64.zip
          - **Linux**: ai-cli-${{ steps.gitversion.outputs.semVer }}-linux-x64.zip
          - **macOS**: ai-cli-${{ steps.gitversion.outputs.semVer }}-osx-x64.zip
          
          ## Version Information
          - **Version**: ${{ steps.gitversion.outputs.semVer }}
          - **Commit**: ${{ github.sha }}
          - **Build**: ${{ github.run_number }}
        draft: false
        prerelease: false
        files: |
          ./publish/ai-cli-${{ steps.gitversion.outputs.semVer }}-win-x64.zip
          ./publish/ai-cli-${{ steps.gitversion.outputs.semVer }}-linux-x64.zip
          ./publish/ai-cli-${{ steps.gitversion.outputs.semVer }}-osx-x64.zip
        token: ${{ secrets.GITHUB_TOKEN }}